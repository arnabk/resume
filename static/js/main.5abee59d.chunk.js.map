{"version":3,"sources":["header.js","card-tag.js","experience.js","opensource.js","skills.js","education.js","socials.js","registerServiceWorker.js","index.js","App.js"],"names":["NameElement","styled","Header","_templateObject","src_header","react_default","a","createElement","Segment","Group","Responsive","maxWidth","onlyTablet","minWidth","as","clearing","textAlign","color","sub","headerData","name","tagLine","email","phone","floated","MarginedLabel","Label","card_tag_templateObject","_templateObject2","Experience","_ref","data","Container","raised","card_tag","ribbon","Grid","stackable","columns","map","m","Column","key","employer","tag","title","Detail","period","description","MarginedLabelWrapper","div","opensource_templateObject","OpenSource","onClick","window","location","href","link","Skills","content","icon","Icon","className","Education","degree","college","Social","Boolean","hostname","match","ReactDOM","render","fluid","experience","experienceData","opensource","openSourceData","skills","skillsData","education","educationData","socials","socialData","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"k5NAKA,IAAMA,EAAcC,YAAOC,IAAPD,CAAHE,KAKFC,EAAA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,EAAQC,MAAT,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,SAAUD,IAAWE,WAAWC,SAChCC,GAAI,kBACFT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASO,UAAQ,EAACC,UAAU,SAASC,MAAM,QACzCZ,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQY,GAAG,MACTT,EAAAC,EAAAC,cAACP,EAAD,CAAakB,KAAG,EAACJ,GAAG,QAAQK,EAAWC,MACvCf,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQgB,KAAG,EAACJ,GAAG,QAAQK,EAAWE,SAClChB,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQgB,KAAG,EAACJ,GAAG,QAAQK,EAAWG,OAClCjB,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQgB,KAAG,EAACJ,GAAG,QAAQK,EAAWI,YAK1ClB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEG,SAAUH,IAAWE,WAAWC,SAAW,EAC3CC,GAAI,kBACFT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASO,UAAQ,EAACE,MAAM,QACtBZ,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQY,GAAG,KAAKU,QAAQ,SACtBnB,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQgB,KAAG,EAACJ,GAAG,QAAQK,EAAWG,OAClCjB,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQgB,KAAG,EAACJ,GAAG,QAAQK,EAAWI,QAEpClB,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQY,GAAG,KAAKU,QAAQ,QACtBnB,EAAAC,EAAAC,cAACP,EAAD,CAAakB,KAAG,EAACJ,GAAG,QAAQK,EAAWC,MACvCf,EAAAC,EAAAC,cAACL,EAAA,EAAD,CAAQgB,KAAG,EAACJ,GAAG,QAAQK,EAAWE,oOChCvC,IAAMI,EAAgBxB,YAAOyB,IAAPzB,CAAH0B,KAIX1B,cAAOyB,IAAPzB,CAAf2B,KCgCeC,EAlCI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACjB1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,QAAM,GACb5B,EAAAC,EAAAC,cAAC2B,EAAD,CAASpB,GAAG,OAAOG,MAAM,OAAOkB,QAAM,GAAtC,cAGA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACxBP,EAAKQ,IAAI,SAAAC,GAAC,OACTnC,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,CAAaC,IAAKF,EAAEG,UAClBtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,QAAM,GACb5B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOZ,GAAG,OAAOG,MAAM,QAAQ2B,KAAG,GAC/BJ,EAAEK,MACHxC,EAAAC,EAAAC,cAACmB,EAAA,EAAMoB,OAAP,KAAeN,EAAEG,SAAjB,IAA4BH,EAAEO,SAEhC1C,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAA,SAAIiC,EAAEQ,wICdpB,IAAMC,EAAuBhD,IAAOiD,IAAVC,KA+BXC,EA1BI,SAAAtB,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACjB1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,QAAM,GACb5B,EAAAC,EAAAC,cAAC2B,EAAD,CAASpB,GAAG,OAAOG,MAAM,OAAOkB,QAAM,GAAtC,wBAGCJ,EAAKQ,IAAI,SAAAC,GAAC,OACTnC,EAAAC,EAAAC,cAAC0C,EAAD,CAAsBP,IAAKF,EAAEpB,MAC3Bf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOZ,GAAG,IAAIG,MAAM,QAAQ2B,KAAG,EAACS,QAAS,kBAAMC,OAAOC,SAASC,KAAOhB,EAAEiB,OACrEjB,EAAEpB,MAELf,EAAAC,EAAAC,cAAA,YAAOiC,EAAEQ,2BCWJU,EA5BA,SAAA5B,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACb1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,QAAM,GACb5B,EAAAC,EAAAC,cAAC2B,EAAD,CAASpB,GAAG,OAAOG,MAAM,OAAOkB,QAAM,GAAtC,UAGCJ,EAAKQ,IAAI,SAAAC,GAAC,OACTnC,EAAAC,EAAAC,cAACkB,EAAD,CACEiB,IAAKF,EAAEpB,KACPN,GAAG,IACHG,MAAOuB,EAAEvB,MACT0C,QAASnB,EAAEpB,KACXwC,KAAMvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAMC,UAAWtB,EAAEoB,OACzBP,QAAS,kBAAMC,OAAOC,SAASC,KAAOhB,EAAEiB,aCoBnCM,EAjCG,SAAAjC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChB1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,QAAM,GACb5B,EAAAC,EAAAC,cAAC2B,EAAD,CAASpB,GAAG,OAAOG,MAAM,OAAOkB,QAAM,GAAtC,aAGA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACxBP,EAAKQ,IAAI,SAAAC,GAAC,OACTnC,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,CAAaC,IAAKF,EAAEwB,QAClB3D,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEZ,GAAG,IACHG,MAAM,OACN2B,KAAG,EACHS,QAAS,kBAAMC,OAAOC,SAASC,KAAOhB,EAAEiB,OAEvCjB,EAAEwB,OACH3D,EAAAC,EAAAC,cAACmB,EAAA,EAAMoB,OAAP,KAAeN,EAAEyB,iBCWdC,EA3BA,SAAApC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACb1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,QAAM,GACb5B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOZ,GAAG,OAAOG,MAAM,OAAOkB,QAAM,GAApC,qBAGCJ,EAAKQ,IAAI,SAAAC,GAAC,OACTnC,EAAAC,EAAAC,cAACkB,EAAD,CACEiB,IAAKF,EAAEpB,KACPN,GAAG,IACHG,MAAM,OACN0C,QAASnB,EAAEpB,KACXwC,KAAMpB,EAAEoB,KACRP,QAAS,kBAAMC,OAAOC,SAASC,KAAOhB,EAAEiB,0DCR9BU,QACW,cAA7Bb,OAAOC,SAASa,UAEe,UAA7Bd,OAAOC,SAASa,UAEhBd,OAAOC,SAASa,SAASC,MACvB,2DCVNC,IAASC,OAAOlE,EAAAC,EAAAC,cCQD,kBACbF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAWwC,OAAO,GAChBnE,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAME,QAAS,GACbjC,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,KACEpC,EAAAC,EAAAC,cAACkE,EAAD,CAAY1C,KAAM2C,KAEpBrE,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,KACEpC,EAAAC,EAAAC,cAACoE,EAAD,CAAY5C,KAAM6C,KAEpBvE,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,KACEpC,EAAAC,EAAAC,cAACsE,EAAD,CAAO9C,KAAM+C,KAEfzE,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,KACEpC,EAAAC,EAAAC,cAACwE,EAAD,CAAWhD,KAAMiD,KAEnB3E,EAAAC,EAAAC,cAAC6B,EAAA,EAAKK,OAAN,KACEpC,EAAAC,EAAAC,cAAC0E,EAAD,CAAQlD,KAAMmD,QDzBN,MAASC,SAASC,eAAe,SDyG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5abee59d.chunk.js","sourcesContent":["import React from 'react';\nimport { Header, Segment, Responsive } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport headerData from './data/header.json';\n\nconst NameElement = styled(Header)`\n  font-weight: bold !important;\n  color: black !important;\n`;\n\nexport default () => (\n  <Segment.Group>\n    <Responsive\n      maxWidth={Responsive.onlyTablet.minWidth}\n      as={() => (\n        <Segment clearing textAlign=\"center\" color=\"teal\">\n          <Header as=\"h2\">\n            <NameElement sub as=\"span\">{headerData.name}</NameElement>\n            <Header sub as=\"span\">{headerData.tagLine}</Header>\n            <Header sub as=\"span\">{headerData.email}</Header>\n            <Header sub as=\"span\">{headerData.phone}</Header>\n          </Header>\n        </Segment>\n      )}\n    />\n    <Responsive\n      minWidth={Responsive.onlyTablet.minWidth + 1}\n      as={() => (\n        <Segment clearing color=\"teal\">\n          <Header as='h2' floated=\"right\">\n            <Header sub as=\"span\">{headerData.email}</Header>\n            <Header sub as=\"span\">{headerData.phone}</Header>\n          </Header>\n          <Header as='h2' floated=\"left\">\n            <NameElement sub as=\"span\">{headerData.name}</NameElement>\n            <Header sub as=\"span\">{headerData.tagLine}</Header>\n          </Header>\n        </Segment>\n      )}\n    />\n  </Segment.Group>\n)","import { Label } from 'semantic-ui-react'\nimport styled from 'styled-components';\n\nexport const MarginedLabel = styled(Label)`\n  margin: 5px !important;\n`;\n\nexport default styled(Label)`\n  margin-bottom: 5px !important;\n`;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Grid, Label, Segment, Container } from 'semantic-ui-react'\nimport CardTag from './card-tag';\n\nconst Experience = ({ data }) => (\n  <Container>\n    <Segment raised>\n      <CardTag as='span' color='teal' ribbon>\n        Experience\n      </CardTag>\n      <Grid stackable columns={1}>\n      {data.map(m => (\n        <Grid.Column key={m.employer}>\n          <Segment raised>\n            <Label as='span' color='brown' tag>\n              {m.title}\n              <Label.Detail>{m.employer} {m.period}</Label.Detail>\n            </Label>\n            <Container>\n              <p>{m.description}</p>\n            </Container>\n          </Segment>\n        </Grid.Column>\n      ))}\n      </Grid>\n    </Segment>\n  </Container>\n);\n\nExperience.propTypes = {\n  data: arrayOf(shape({\n    title: string,\n    employer: string,\n    period: string,\n    description: string,\n  })).isRequired,\n};\n\nexport default Experience;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Label, Segment, Container } from 'semantic-ui-react'\nimport styled from 'styled-components';\nimport CardTag from './card-tag';\n\nconst MarginedLabelWrapper = styled.div`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nconst OpenSource = ({ data }) => (\n  <Container>\n    <Segment raised>\n      <CardTag as='span' color='teal' ribbon>\n        Open Source Projects\n      </CardTag>\n      {data.map(m => (\n        <MarginedLabelWrapper key={m.name}>\n          <Label as='a' color='green' tag onClick={() => window.location.href = m.link}>\n            {m.name}\n          </Label>\n          <span>{m.description}</span>\n        </MarginedLabelWrapper>\n      ))}\n    </Segment>\n  </Container>\n);\n\nOpenSource.propTypes = {\n  data: arrayOf(shape({\n    name: string,\n    link: string,\n    description: string,\n  })).isRequired,\n};\n\nexport default OpenSource;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Segment, Container, Icon } from 'semantic-ui-react'\nimport CardTag, { MarginedLabel } from './card-tag';\n\nconst Skills = ({ data }) => (\n  <Container>\n    <Segment raised>\n      <CardTag as='span' color='teal' ribbon>\n        Skills\n      </CardTag>\n      {data.map(m => (\n        <MarginedLabel\n          key={m.name}\n          as='a'\n          color={m.color}\n          content={m.name}\n          icon={<Icon className={m.icon} />}\n          onClick={() => window.location.href = m.link}\n        />\n      ))}\n    </Segment>\n  </Container>\n);\n\nSkills.propTypes = {\n  data: arrayOf(shape({\n    name: string,\n    color: string,\n    icon: string,\n  })).isRequired,\n};\n\nexport default Skills;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Grid, Label, Segment, Container } from 'semantic-ui-react'\nimport CardTag from './card-tag';\n\nconst Education = ({ data }) => (\n  <Container>\n    <Segment raised>\n      <CardTag as='span' color='teal' ribbon>\n        Education\n      </CardTag>\n      <Grid stackable columns={1}>\n      {data.map(m => (\n        <Grid.Column key={m.degree}>\n          <Label\n            as='a'\n            color='grey'\n            tag\n            onClick={() => window.location.href = m.link}\n          >\n            {m.degree}\n            <Label.Detail>{m.college}</Label.Detail>\n          </Label>\n        </Grid.Column>\n      ))}\n      </Grid>\n    </Segment>\n  </Container>\n);\n\nEducation.propTypes = {\n  data: arrayOf(shape({\n    degree: string,\n    college: string,\n    link: string,\n  })).isRequired,\n};\n\nexport default Education;\n","import React from 'react';\nimport { arrayOf, shape, string } from 'prop-types';\nimport { Label, Segment, Container } from 'semantic-ui-react'\nimport { MarginedLabel } from './card-tag';\n\nconst Social = ({ data }) => (\n  <Container>\n    <Segment raised>\n      <Label as='span' color='teal' ribbon>\n        Social Connection\n      </Label>\n      {data.map(m => (\n        <MarginedLabel\n          key={m.name}\n          as='a'\n          color='grey'\n          content={m.name}\n          icon={m.icon}\n          onClick={() => window.location.href = m.link}\n        />\n      ))}\n    </Segment>\n  </Container>\n);\n\nSocial.propTypes = {\n  data: arrayOf(shape({\n    name: string,\n    link: string,\n  })).isRequired,\n};\n\nexport default Social;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport { unregister } from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nunregister();\n","import React from 'react';\nimport { Grid, Container } from 'semantic-ui-react';\nimport Header from './header';\nimport Experience from './experience';\nimport OpenSource from './opensource';\nimport Skill from \"./skills\";\nimport Education from './education';\nimport Social from './socials';\nimport experienceData from './data/experiences.json';\nimport openSourceData from './data/opensources.json';\nimport skillsData from './data/skills.json';\nimport socialData from './data/socials.json';\nimport educationData from './data/educations.json';\n\nexport default () => (\n  <Container fluid={true}>\n    <Header />\n    <Grid columns={1}>\n      <Grid.Column>\n        <Experience data={experienceData} />\n      </Grid.Column>\n      <Grid.Column>\n        <OpenSource data={openSourceData} />\n      </Grid.Column>\n      <Grid.Column>\n        <Skill data={skillsData} />\n      </Grid.Column>\n      <Grid.Column>\n        <Education data={educationData} />\n      </Grid.Column>\n      <Grid.Column>\n        <Social data={socialData} />\n      </Grid.Column>\n    </Grid>\n  </Container>\n);\n"],"sourceRoot":""}